from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram.filters import Command, CommandStart, Text
from loguru import logger
from job.hh_raspberry import search_job, region_id
from job.read_vacancies import send_vacancies, send_less_vacancies
from utils.download_from_youtube import download_video_audio
from utils.exchange_rate import exchange
from utils.random_image import resource_link_availability
from utils.system_info import get_system_info
from utils.led_on_off import Led
from utils.screenshot import get_screenshot
from utils.shell import shell_cmd
from keyboards.keyboard import commands
from config_files.config import Config, load_config
from keyboards.inline import create_pagination_keyboard, FLAG

config: Config = load_config('config_files/.env')
admin: config = config.tg_bot.admin_ids
user: config = config.tg_bot.user_ids
bot: Bot = Bot(token=config.tg_bot.token)
dp: Dispatcher = Dispatcher()
router: Router = Router()


@router.message(CommandStart())
async def start_message(message: Message):
    """ –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ """
    logger.info(f'{message.chat.id}: –°—Ç–∞—Ä—Ç –±–æ—Ç–∞')
    origin = ('–ù—É —á—Ç–æ –≥–æ—Ç–æ–≤ –∫ –ø–æ–∏—Å–∫—É —Ä–∞–±–æ—Ç—ã? üòÑ\n–ñ–º–∏ –∫–Ω–æ–ø–∫–∏-–∫–æ–º–∞–Ω–¥—ã –≤–Ω–∏–∑—É\n'
              '[‚úîÔ∏è —Ä–∞–±–æ—Ç–∞ ‚úîÔ∏è] - –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ–∏—Å–∫–µ –≤–∞–∫–∞–Ω—Å–∏–π —Å —Å–∞–π—Ç–∞ hh.ru\n'
              '–ö–∏–Ω—É–≤ —Å—Å—ã–ª–∫—É —Å youtube, –≤–∞–º –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–æ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ '
              '(–¥–æ 50MB), –∞ –µ—Å–ª–∏ –ø–æ—Å–ª–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥–æ–ø–∏—Å–∞—Ç—å audio, '
              '—Å–∫–∞—á–∞–Ω–∞ –∞—É–¥–∏–æ –¥–æ—Ä–æ–∂–∫–∞\n[ /help ] - –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
    await bot.send_photo(message.chat.id, photo=FSInputFile(path='img/job.jpg'),
                         caption=origin, reply_markup=(await commands())[0])


@router.message(Command(commands=['help']))
async def start_message(message: Message):
    """ –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏ """
    logger.info(f'{message.chat.id}: –ø–æ–º–æ—â—å')
    origin = ('<b>[‚úîÔ∏è —Ä–∞–±–æ—Ç–∞ ‚úîÔ∏è] - –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ–∏—Å–∫–µ –≤–∞–∫–∞–Ω—Å–∏–π —Å —Å–∞–π—Ç–∞ hh.ru'
              '\n\n[‚ùå stop ‚ùå] - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–≤–æ–¥–∞ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ —Ä–∞–±–æ—Ç–µ\n\n'
              '[üí≤ USD - EUR üí≤] - –ö—É—Ä—Å –≤–∞–ª—é—Ç USD, EUR, BTC, ETH\n\n'
              '[‚öôÔ∏è –º–æ–π id ‚öôÔ∏è] - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º\n\n'
              '[üßú –ö–∞—Ä—Ç–∏–Ω–∫—É? üßö‚Äç] - –í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏\n\n'
              '–ö–∏–Ω—É–≤ —Å—Å—ã–ª–∫—É —Å youtube, –≤–∞–º –±—É–¥–µ—Ç —Å–∫–∞—á–∞–Ω–æ –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ '
              '(–¥–æ 50MB), –∞ –µ—Å–ª–∏ –ø–æ—Å–ª–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –¥–æ–ø–∏—Å–∞—Ç—å audio, '
              '—Å–∫–∞—á–∞–Ω–∞ –∞—É–¥–∏–æ –¥–æ—Ä–æ–∂–∫–∞</b>')
    await bot.send_message(message.chat.id, origin, parse_mode='HTML')


@router.message(F.content_type.in_({'photo', 'video', 'video_note', 'animation',
                                    'sticker', 'audio', 'voice', 'document'}))
async def text_message(message: Message):
    """ –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∞–º–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, —Å—Ç–∏–∫–µ—Ä–æ–≤, –∞–Ω–∏–º–∞—Ü–∏–∏) """
    await message.delete()


@router.callback_query(Text(endswith='   –≤ –Ω–∞—á–∞–ª–æ   '))
async def beginning_command(callback: CallbackQuery):
    logger.info(f'{callback.message.text}')
    if (callback.from_user.id in FLAG) and (
            FLAG[callback.from_user.id]["page"] != 1):
        FLAG[callback.from_user.id]["page"] = 1
        text = FLAG[callback.from_user.id]['links'][0]
        await callback.message.edit_text(
            text=text,
            reply_markup=create_pagination_keyboard(
                FLAG[callback.from_user.id]["page"],
                len(FLAG[callback.from_user.id]['links'])))


@router.callback_query(Text(text='>>'))
async def process_forward_press(callback: CallbackQuery):
    logger.info(f'{callback.message.text}')
    if (callback.from_user.id in FLAG) and (
            FLAG[callback.from_user.id]["page"] < len(
            FLAG[callback.from_user.id]['links'])):
        FLAG[callback.from_user.id]["page"] += 1
        text = (FLAG[callback.from_user.id]['links']
        [FLAG[callback.from_user.id]["page"] - 1])
        if callback.message.text == text:
            FLAG[callback.from_user.id]["page"] += 1
            text = (FLAG[callback.from_user.id]['links']
            [FLAG[callback.from_user.id]["page"] - 1])
        await callback.message.edit_text(
            text=text,
            reply_markup=create_pagination_keyboard(
                FLAG[callback.from_user.id]["page"],
                len(FLAG[callback.from_user.id]['links'])))


@router.callback_query(Text(text='<<'))
async def process_backward_press(callback: CallbackQuery):
    logger.info(f'{callback.message.text}')
    if (callback.from_user.id in FLAG) and (
            FLAG[callback.from_user.id]["page"] > 1):
        FLAG[callback.from_user.id]["page"] -= 1
        text = (FLAG[callback.from_user.id]['links']
        [FLAG[callback.from_user.id]["page"] - 1])
        if callback.message.text == text:
            FLAG[callback.from_user.id]["page"] -= 1
            text = (FLAG[callback.from_user.id]['links']
            [FLAG[callback.from_user.id]["page"] - 1])
        await callback.message.edit_text(
            text=text,
            reply_markup=create_pagination_keyboard(
                FLAG[callback.from_user.id]["page"],
                len(FLAG[callback.from_user.id]['links'])))


@router.message(F.text)
async def text_message(message: Message):
    """
    –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –±–æ—Ç–∞
    –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
    """
    logger.info(f'{message.chat.id}: {message.text}')
    if message.text.startswith('*'):
        hr = message.text.split(' ')
        profession = ''
        if (hr[0] or hr[1]) in ['–†–µ—Å–ø—É–±–ª–∏–∫–∞', '—Ä–µ—Å–ø—É–±–ª–∏–∫–∞', '–∫—Ä–∞–π', '–æ–±–ª–∞—Å—Ç—å']:
            hr[0] = hr[0] + ' ' + hr.pop(1)
        for i in hr:
            if i == hr[0]:
                continue
            if i == hr[len(hr) - 1]:
                break
            profession += ''.join(i + ' ')
        profession = profession.strip()
        region = await region_id(hr[0][1:])
        days = hr[-1]
        if region is None:
            await bot.send_message(message.chat.id,
                                   '–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
        elif len(days) != 2 or not days.isdigit() or days == '00':
            await bot.send_message(message.chat.id,
                                   '–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—É –¥–ª—è –ø–æ–∏—Å–∫–∞')
        else:
            if int(days) > 30:
                days = '30'
            await search_job(message.chat.id, '', f'{profession}', f'{region}',
                             f'{days}')
            await send_less_vacancies(message, bot)

    elif message.text.startswith('#'):
        if message.chat.id in admin:
            await shell_cmd(message, bot)

    elif message.text == 'üí≤ USD - EUR üí≤':
        await exchange(message, bot)

    elif message.text == "üßú –ö–∞—Ä—Ç–∏–Ω–∫—É? üßö‚Äç":
        await resource_link_availability(message, bot)

    elif message.text == "‚ú≥Ô∏è read file ‚ú≥Ô∏è":
        if message.chat.id in admin:
            await send_vacancies(message, bot)
        else:
            await bot.send_message(message.chat.id,
                                   '–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ —á–∏—Ç–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª üòÑ')

    elif message.text == "üí° led on üí°":
        if message.chat.id in admin:
            led = Led()
            led.set_led_on_off(True)
            await bot.send_message(message.chat.id, '–í–∫–ª—é—á–∞—é —á–∞–π–Ω–∏–∫ üòÑ')
        else:
            await bot.send_message(message.chat.id,
                                   '–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤–∫–ª—é—á–∞—Ç—å —á–∞–π–Ω–∏–∫ üòÑ')
    elif message.text == "üí° led off üí°":
        if message.chat.id in admin:
            led = Led()
            led.set_led_on_off(False)
            await bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é —á–∞–π–Ω–∏–∫ üòÑ')
        else:
            await bot.send_message(message.from_user.id,
                                   '–í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤—ã–∫–ª—é—á–∞—Ç—å —á–∞–π–Ω–∏–∫ üòÑ')

    elif message.text == "‚öôÔ∏è –º–æ–π id ‚öôÔ∏è":
        ids = f'id - {message.chat.id}'
        if message.from_user.id != message.chat.id:
            ids = (f'chat_id = {message.chat.id},\n'
                   f'user_id - {message.from_user.id}')
        user_information = (f'<b>{ids}\n'
                            f'–ò–º—è - {message.chat.full_name}\n'
                            f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - @{message.chat.username}</b>')
        await bot.send_message(message.chat.id, user_information,
                               parse_mode='HTML')

    elif message.text == "üîê admin üîê":
        if message.chat.id in admin:
            await bot.send_message(message.chat.id, "‚ùáÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
                                   reply_markup=(await commands())[1])
        else:
            await bot.send_message(message.chat.id,
                                   '–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üòÑ')
            alert = (f"<b>–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –∑–∞–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É: {message.text}\n\n"
                     f"user id: {message.chat.id}\n"
                     f"first name: {message.from_user.first_name}\n"
                     f"last name: {message.from_user.last_name}\n"
                     f"fullname: {message.chat.full_name}\n"
                     f"username: @{message.chat.username}</b>")
            await bot.send_message(admin[0], alert, parse_mode='HTML')

    elif message.text == "‚úîÔ∏è —Ä–∞–±–æ—Ç–∞ ‚úîÔ∏è":
        if message.chat.id in user:
            await search_job(message.chat.id, '', '–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä', '1979', '30')
            await send_less_vacancies(message, bot)
        else:
            example_search = ('*–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ*:\n\n'
                              '`*`*[–≥–æ—Ä–æ–¥] [–ø—Ä–æ—Ñ–µ—Å—Å–∏—è —Å –∂–µ–ª–∞–µ–º–æ–π –∑–∞—Ä–ø–ª–∞—Ç–æ–π] '
                              '[—á–∏—Å–ª–æ –¥–Ω–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π (max=30)]\n\n'
                              '–ü—Ä–∏–º–µ—Ä—ã*:\n`*–í–æ—Ä–æ–Ω–µ–∂ –≤–æ–¥–∏—Ç–µ–ª—å 10`\n`*–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π'
                              ' –∫—Ä–∞–π –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä 30`\n`*–†–æ—Å—Å–∏—è –∏–Ω–∂–µ–Ω–µ—Ä –∞—Å—É'
                              ' 150000 05`\n`*–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫ —É—á–∏—Ç–µ–ª—å '
                              '–∏—Å—Ç–æ—Ä–∏–∏ 50000 07`\n\n–≥–¥–µ `*` - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π '
                              '—Å–∏–º–≤–æ–ª –≤ –Ω–∞—á–∞–ª–µ,\n`–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫` - —ç—Ç–æ –≥–æ—Ä–æ–¥, '
                              '–≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥—É—Ç –∏—Å–∫–∞—Ç—å—Å—è,\n`—É—á–∏—Ç–µ–ª—å '
                              '–∏—Å—Ç–æ—Ä–∏–∏` - –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞,\n`50000` - '
                              '–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–ø–ª–∞—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞,\n`07` '
                              '- –ø–æ–∏—Å–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π.')
            await bot.send_message(message.chat.id, example_search,
                                   parse_mode='Markdown')

    elif message.text == '‚ùå stop ‚ùå':
        if message.chat.id in FLAG:
            FLAG[message.chat.id]['flag'] = 1

    elif list(filter(lambda x: message.text.startswith(x), [
        'https://youtu.be/',
        'https://www.youtu.be/',
        'https://youtube.com/',
        'https://www.youtube.com/'
    ])):
        await download_video_audio(message, bot)

    elif message.text == "‚õîÔ∏èreboot‚õîÔ∏è":
        if message.chat.id in admin:
            await bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é üòÑ')
            try:
                from os import system
                system('reboot')
            except RuntimeError:
                logger.error('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞')

    elif message.text == "üñ•–û —Å–µ—Ä–≤–µ—Ä–µ":
        await get_system_info(message, bot)

    elif message.text == "‚úÖ–°–∫—Ä–∏–Ω—à–æ—Ç":
        await get_screenshot(message, bot)

    elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
        await bot.send_message(message.chat.id, "‚ùóÔ∏è –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å",
                               reply_markup=(await commands())[0])

    else:
        fail = (f'<b>–ù–µ –Ω–∞–¥–æ –±–∞–ª–æ–≤–∞—Ç—å—Å—è* üò° {message.chat.first_name}\n\n'
                f'üòú –ò —Ç–µ–±–µ —Ç–æ–≥–æ –∂–µ:   {message.text}</b>')
        await message.answer(text=fail, parse_mode='HTML')
        await message.delete()
